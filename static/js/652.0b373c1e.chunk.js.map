{"version":3,"file":"static/js/652.0b373c1e.chunk.js","mappings":"wOAwFA,UAhFiB,WACf,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,cACH,OAAOV,EAAeW,GACxB,IAAK,QACH,OAAOT,EAASS,GAClB,IAAK,WACH,OAAOP,EAAYO,GACrB,QACE,SAcN,OACE,iCACE,+CACA,gBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,UACE,UAAC,IAAD,CAAMC,SAdU,SAAAN,GACpBA,EAAEO,iBACF,IAAMC,EAAO,CAAEN,KAAMX,EAAaE,MAAOA,EAAOE,SAAUA,GAE1DE,GAASY,EAAAA,EAAAA,IAAoBD,IAC7BhB,EAAe,IACfE,EAAS,IACTE,EAAY,KAOR,WACE,UAAC,UAAD,CAAYQ,UAAWC,EAAAA,EAAAA,YAAvB,0BAEE,SAAC,YAAD,CACEK,KAAK,OACLR,KAAK,cACLC,MAAOZ,EACPoB,SAAUZ,EACVa,UAAQ,QAGZ,UAAC,UAAD,CAAYR,UAAWC,EAAAA,EAAAA,YAAvB,mBAEE,UAAC,IAAD,YACE,SAAC,SAAD,iBACA,SAAC,YAAD,CACEK,KAAK,QACLR,KAAK,QACLC,MAAOV,EACPkB,SAAUZ,EACVa,UAAQ,WAId,UAAC,UAAD,CAAYR,UAAWC,EAAAA,EAAAA,YAAvB,sBAEE,SAAC,YAAD,CACEK,KAAK,WACLR,KAAK,WACLC,MAAOR,EACPgB,SAAUZ,EACVa,UAAQ,QAGZ,SAAC,IAAD,CAAQR,UAAWC,EAAAA,EAAAA,OAAeK,KAAK,UAAvC,6C,uIC9EJG,EAAuBC,EAAAA,cAAoB,MACjDD,EAAQE,YAAc,oBACtB,Q,gECKMC,GAAiBC,EAAAA,EAAAA,GAAmB,mBAAoB,CAC5DC,UAAW,SAuBPC,EAA0BL,EAAAA,YAAiB,WAQ9CM,GAAQ,IAPTC,EAOS,EAPTA,SACAC,EAMS,EANTA,KACAC,EAKS,EALTA,cACAnB,EAIS,EAJTA,UAIS,IAFToB,GAAIN,OAEK,MAFO,MAEP,EADNO,GACM,YACTJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,eAGxC,IAAMM,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,KAAK,IACzC,OAAoBC,EAAAA,EAAAA,KAAKC,EAAkBC,SAAU,CACnD5B,MAAOwB,EACPK,UAAuBH,EAAAA,EAAAA,KAAKX,GAAD,QAAC,QAC1BE,IAAKA,GACFK,GAFsB,IAGzBrB,UAAW6B,GAAAA,CAAW7B,EAAWiB,EAAUC,GAAQ,GAAJ,OAAOD,EAAP,YAAmBC,GAAQC,GAAiB,0BAIjGJ,EAAWJ,YAAc,aACzB,MAAemB,OAAOC,OAAOhB,EAAY,CACvCiB,KAAMpB,EACNqB,MAtCsB,SAAAZ,GAAK,OAAiBI,EAAAA,EAAAA,KAAKb,EAAgB,CACjEgB,UAAuBH,EAAAA,EAAAA,KAAKS,EAAAA,GAAD,QACzB5B,KAAM,SACHe,OAoCLc,SA9CyB,SAAAd,GAAK,OAAiBI,EAAAA,EAAAA,KAAKb,EAAgB,CACpEgB,UAAuBH,EAAAA,EAAAA,KAAKS,EAAAA,GAAD,QACzB5B,KAAM,YACHe,U,mBCdP,KAAgB,UAAY,gCAAgC,YAAc,kCAAkC,YAAc,kCAAkC,UAAY,gCAAgC,OAAS","sources":["components/register/Register.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","webpack://react-homework-template/./src/components/contacts/formContacts/FormContacts.module.css?3969"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { profileRegistration } from 'redux/operations/profile-operation';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport styles from '../contacts/formContacts/FormContacts.module.css';\n\nconst Register = () => {\n  const [profileName, setProfileName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  // todo func\n  const inputHandler = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'profileName':\n        return setProfileName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const user = { name: profileName, email: email, password: password };\n\n    dispatch(profileRegistration(user));\n    setProfileName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <h1>User registration</h1>\n      <div className={styles.container}>\n        <Form onSubmit={submitHandler}>\n          <Form.Label className={styles.form__title}>\n            Profile Name\n            <Form.Control\n              type=\"text\"\n              name=\"profileName\"\n              value={profileName}\n              onChange={inputHandler}\n              required\n            />\n          </Form.Label>\n          <Form.Label className={styles.form__title}>\n            Email\n            <InputGroup>\n              <InputGroup.Text>@</InputGroup.Text>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={inputHandler}\n                required\n              />\n            </InputGroup>\n          </Form.Label>\n          <Form.Label className={styles.form__title}>\n            Password\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={inputHandler}\n              required\n            />\n          </Form.Label>\n          <Button className={styles.button} type=\"sumbmit\">\n            Click to Registration\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormContacts_container__FszrF\",\"form__title\":\"FormContacts_form__title__vB2vV\",\"input__form\":\"FormContacts_input__form__FtfZF\",\"bg__light\":\"FormContacts_bg__light__+iOzj\",\"button\":\"FormContacts_button__oZFxV\"};"],"names":["useState","profileName","setProfileName","email","setEmail","password","setPassword","dispatch","useDispatch","inputHandler","e","currentTarget","name","value","className","styles","onSubmit","preventDefault","user","profileRegistration","type","onChange","required","context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","size","hasValidation","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","children","classNames","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}